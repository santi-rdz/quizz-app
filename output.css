/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: #ee5454;
    --color-orange-50: #fff5ed;
    --color-green-500: #2fdb87;
    --color-blue-50: #ebf0ff;
    --color-blue-300: #abc1e1;
    --color-blue-900: #313e51;
    --color-purple-50: oklch(97.7% 0.014 308.299);
    --color-purple-100: #f6e7ff;
    --color-purple-600: #a727f5;
    --color-fuchsia-200: oklch(90.3% 0.076 319.62);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-white: #fff;
    --spacing: 0.25rem;
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --radius-sm: 0.25rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-3xl: 1.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-rubik: "Rubik";
    --color-grey-500: #626c7f;
    --color-grey-50: #f4f6fa;
    --color-blue-850: #3b4d66;
    --animate-slideLeft: slideToLeft ease-in-out 450ms both;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .my-container {
    width: min(90%, 70rem);
    margin: 0 auto;
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-\[clamp\(1rem\,0\.2958rem\+3\.0047vw\,3rem\)\] {
    margin-top: clamp(1rem, 0.2958rem + 3.0047vw, 3rem);
  }
  .mt-\[clamp\(3rem\,2\.6479rem\+1\.5023vw\,4rem\)\] {
    margin-top: clamp(3rem, 2.6479rem + 1.5023vw, 4rem);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-\[clamp\(1rem\,0\.6479rem\+1\.5023vw\,2rem\)\] {
    margin-right: clamp(1rem, 0.6479rem + 1.5023vw, 2rem);
  }
  .mb-\[clamp\(1rem\,0\.8239rem\+0\.7512vw\,1\.5rem\)\] {
    margin-bottom: clamp(1rem, 0.8239rem + 0.7512vw, 1.5rem);
  }
  .ml-auto {
    margin-left: auto;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-full {
    height: 100%;
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[18ch\] {
    max-width: 18ch;
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .animate-slideLeft {
    animation: var(--animate-slideLeft);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-850 {
    background-color: var(--color-blue-850);
  }
  .bg-blue-900 {
    background-color: var(--color-blue-900);
  }
  .bg-orange-50 {
    background-color: var(--color-orange-50);
  }
  .bg-purple-50 {
    background-color: var(--color-purple-50);
  }
  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-12 {
    padding: calc(var(--spacing) * 12);
  }
  .py-\[clamp\(1\.25rem\,-0\.2905rem\+6\.5728vw\,5\.625rem\)\] {
    padding-block: clamp(1.25rem, -0.2905rem + 6.5728vw, 5.625rem);
  }
  .text-start {
    text-align: start;
  }
  .font-rubik {
    font-family: var(--font-rubik);
  }
  .text-1 {
    font-size: clamp(5.5rem, 4.2676rem + 5.2582vw, 9rem);
    line-height: 1;
  }
  .text-2 {
    font-size: clamp(2.5rem, 1.9718rem + 2.2535vw, 4rem);
    line-height: 1;
  }
  .text-3 {
    font-size: clamp(1.25rem, 0.8979rem + 1.5023vw, 2.25rem);
    line-height: 1.2;
  }
  .text-4 {
    font-size: clamp(1.125rem, 0.9049rem + 0.939vw, 1.75rem);
    line-height: 1;
  }
  .text-5 {
    font-size: clamp(0.875rem, 0.6549rem + 0.939vw, 1.5rem);
    line-height: 1.5;
  }
  .text-6 {
    font-size: clamp(0.875rem, 0.743rem + 0.5634vw, 1.25rem);
    line-height: 1.5;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-blue-300 {
    color: var(--color-blue-300);
  }
  .text-grey-500 {
    color: var(--color-grey-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-blue-900\/15 {
    --tw-shadow-color: color-mix(in srgb, #313e51 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-900) 15%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .transition-\[background-color_scale\] {
    transition-property: background-color scale;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background-color_scale_opacity\] {
    transition-property: background-color scale opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background-color_transform_shadow\] {
    transition-property: background-color transform shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background-color_transform_shdaow\] {
    transition-property: background-color transform shdaow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-400 {
    --tw-duration: 400ms;
    transition-duration: 400ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .peer-checked\:bg-purple-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-purple-600);
    }
  }
  .peer-checked\:text-white {
    &:is(:where(.peer):checked ~ *) {
      color: var(--color-white);
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:bg-blue-850\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #3b4d66 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-850) 70%, transparent);
        }
      }
    }
  }
  .hover\:bg-purple-600\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #a727f5 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-purple-600) 80%, transparent);
        }
      }
    }
  }
  .hover\:ring-2 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ring-purple-600 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: var(--color-purple-600);
      }
    }
  }
  .has-checked\:ring-2 {
    &:has(*:checked) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .has-checked\:ring-purple-600 {
    &:has(*:checked) {
      --tw-ring-color: var(--color-purple-600);
    }
  }
  .has-disabled\:pointer-events-none {
    &:has(*:disabled) {
      pointer-events: none;
    }
  }
  .md\:mt-8 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 8);
    }
  }
  .md\:items-start {
    @media (width >= 48rem) {
      align-items: flex-start;
    }
  }
  .md\:gap-16 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .lg\:mt-23 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 23);
    }
  }
  .lg\:min-h-44 {
    @media (width >= 64rem) {
      min-height: calc(var(--spacing) * 44);
    }
  }
  .lg\:flex-1 {
    @media (width >= 64rem) {
      flex: 1;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:gap-24 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .light\:-translate-\[100\%\] {
    &:where(.light, .light *) {
      --tw-translate-x: calc(100% * -1);
      --tw-translate-y: calc(100% * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .light\:-translate-y-1\/2 {
    &:where(.light, .light *) {
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .light\:bg-grey-50 {
    &:where(.light, .light *) {
      background-color: var(--color-grey-50);
    }
  }
  .light\:bg-purple-100 {
    &:where(.light, .light *) {
      background-color: var(--color-purple-100);
    }
  }
  .light\:bg-white {
    &:where(.light, .light *) {
      background-color: var(--color-white);
    }
  }
  .light\:fill-grey-500 {
    &:where(.light, .light *) {
      fill: var(--color-grey-500);
    }
  }
  .light\:text-blue-900 {
    &:where(.light, .light *) {
      color: var(--color-blue-900);
    }
  }
  .light\:text-gray-500 {
    &:where(.light, .light *) {
      color: var(--color-gray-500);
    }
  }
  .light\:text-grey-500 {
    &:where(.light, .light *) {
      color: var(--color-grey-500);
    }
  }
  .light\:text-red-500 {
    &:where(.light, .light *) {
      color: var(--color-red-500);
    }
  }
  .light\:shadow-\[rgba\(143\,160\,193\,0\.14\)\] {
    &:where(.light, .light *) {
      --tw-shadow-color: rgba(143,160,193,0.14);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, rgba(143,160,193,0.14) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .hover\:light\:bg-white\/75 {
    &:hover {
      @media (hover: hover) {
        &:where(.light, .light *) {
          background-color: color-mix(in srgb, #fff 75%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white) 75%, transparent);
          }
        }
      }
    }
  }
  .hover\:light\:ring {
    &:hover {
      @media (hover: hover) {
        &:where(.light, .light *) {
          --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .hover\:light\:ring-fuchsia-200 {
    &:hover {
      @media (hover: hover) {
        &:where(.light, .light *) {
          --tw-ring-color: var(--color-fuchsia-200);
        }
      }
    }
  }
  .quizActive\:flex {
    &:where(.quizActive, .quizActive *) {
      display: flex;
    }
  }
  .correct\:bg-green-500 {
    &:where(.correct, .correct *) {
      background-color: var(--color-green-500);
    }
  }
  .correct\:text-white {
    &:where(.correct, .correct *) {
      color: var(--color-white);
    }
  }
  .correct\:ring-2 {
    &:where(.correct, .correct *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .correct\:ring-green-500 {
    &:where(.correct, .correct *) {
      --tw-ring-color: var(--color-green-500);
    }
  }
  .incorrect\:bg-red-500 {
    &:where(.incorrect, .incorrect *) {
      background-color: var(--color-red-500);
    }
  }
  .incorrect\:text-white {
    &:where(.incorrect, .incorrect *) {
      color: var(--color-white);
    }
  }
  .incorrect\:ring-2 {
    &:where(.incorrect, .incorrect *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .incorrect\:ring-red-500 {
    &:where(.incorrect, .incorrect *) {
      --tw-ring-color: var(--color-red-500);
    }
  }
}
@font-face {
  font-family: "Rubik";
  src: url("assets/fonts/Rubik-VariableFont_wght.ttf");
  font-style: normal;
}
body {
  min-height: 100dvh;
  background-image: url("assets/images/pattern-background-mobile-dark.svg");
  background-repeat: no-repeat;
  background-size: cover;
}
body.light {
  background-image: url("assets/images/pattern-background-mobile-light.svg");
}
@media (width >= 768px) {
  body {
    background-size: auto;
  }
}
@media (width >= 1024px) {
  body {
    background-image: url("assets/images/pattern-background-desktop-dark.svg");
    background-position: center;
    background-size: cover;
  }
  body.light {
    background-image: url("assets/images/pattern-background-desktop-light.svg");
  }
}
.subjects li:nth-child(2) {
  animation-delay: 100ms;
}
.subjects li:nth-child(3) {
  animation-delay: 200ms;
}
.subjects li:nth-child(4) {
  animation-delay: 300ms;
}
.answer.correctAnswer label::after, .answer.correct label::after, .answer.incorrect label::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 16px;
  transform: translateY(-50%);
  width: 30px;
  height: 30px;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}
.answer.correct label::after {
  background-image: url("assets/images/icon-correct.svg");
}
.answer.correctAnswer label::after {
  background-image: url("assets/images/icon-correct.svg");
}
.answer.incorrect label::after {
  background-image: url("assets/images/icon-incorrect.svg");
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes slideToLeft {
  0% {
    transform: translateX(150px);
    opacity: 0.2;
    visibility: hidden;
  }
  1% {
    visibility: visible;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
